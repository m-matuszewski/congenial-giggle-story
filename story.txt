Michael Matuszewski -

There once was a lonely object, all by itself on the heap. Its only friend
was a reference, but it lived on the stack. The object feels like the
reference is very controlling, but there's not much the object can do about
that. One cycle, the reference decided to give something to our object, and
set one of its fields.
What the reference set in that field though was unique, the reference wanted
to give something special to its object,he knew that the object craved more 
than anything in the world was friends, so in that field it gave the object
an array of pointers,all pointing to the reference itself!He did that because...
This object had no friends, and this array of pointers gave it all the attention
it could have asked for. This object was not used to such attention, and began
get overwhelmed by his new friends. One day, the pressure became too much and 
the reference had to act fast.  
Due to all of the pressure the object was feeling with so many friends
he decided to cut off all ties. He isolated himself all alone on the heap and 
refused to accept the attention. The object was contemplating his existence
and was praying for the day that he would get garbage collected.

The reference noticed that things were quiet over on the stack and upon
investigation, it was no longer a reference to it's friend object, but
a null reference. This made the reference worry greatly, and it searched far
and wide for a local reference or some long lost method call. Luckily, the
object was found and was saved from the garbage collector! The reference
quickly called reset() and our friend the object was back to normal.
The end
